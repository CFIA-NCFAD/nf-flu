// Illumina subworkflow process configuration
process {
  withName: 'CHECK_SAMPLE_SHEET' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.tracedir}/" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }

  withName: 'IRMA' {
    publishDir = [
      [
        path: { "${params.outdir}/irma"},
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ],
      [
        path: { "${params.outdir}/consensus/irma/" },
        pattern: "*.consensus.fasta",
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'BLAST_MAKEBLASTDB' {
    ext.args = '-dbtype nucl'
    publishDir = [
      [
        path: { "${params.outdir}/blast/db"},
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'BLAST_BLASTN' {
    ext.args = '-outfmt "6 qaccver saccver pident length mismatch gapopen qstart qend sstart send evalue bitscore qlen slen qcovs stitle" -num_alignments 1000000 -evalue 1e-6'
    publishDir = [
      [
        path: { "${params.outdir}/blast"},
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'SUBTYPING_REPORT' {
    publishDir = [
      [
        path: { "${params.outdir}/"},
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'ZSTD_DECOMPRESS_.*' {
    publishDir = [
      [
        path: { "${params.outdir}/ncbi-influenza-db"},
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'CAT_ILLUMINA_FASTQ' {
    publishDir = [
      [
        path: { "${params.outdir}/fastq"},
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'MULTIQC' {
    publishDir = [
      [
        path: { "${params.outdir}/MultiQC" },
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'READ_COUNT_FAIL_TSV' {
    publishDir = [
      [
        path: { "${params.outdir}/read_count" },
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'READ_COUNT_PASS_TSV' {
    publishDir = [
      [
        path: { "${params.outdir}/read_count" },
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'MINIMAP2' {
    publishDir = [
      [
        path: { "${params.outdir}/mapping" },
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'MOSDEPTH_GENOME' {
    publishDir = [
      [
        path: { "${params.outdir}/coverage" },
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'BCFTOOLS_STATS' {
    publishDir = [
      [
        path: { "${params.outdir}/variants" },
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }

  withName: 'FREEBAYES' {
    publishDir = [
      [
        path: { "${params.outdir}/variants" },
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        mode: params.publish_dir_mode
      ]
    ]
  }
  
  withName: 'SOFTWARE_VERSIONS' {
   publishDir = [
     [
       path: { "${params.outdir}/pipeline_info" },
       pattern: "software_versions.yml",
       mode: params.publish_dir_mode
     ]
   ]
 }
}
