
process {
    withName: 'IRMA' {
        publishDir = [
            [
                path: { "${params.outdir}/irma"},
                mode: params.publish_dir_mode
            ],
            [
                path: { "${params.outdir}/consensus/irma/" },
                pattern: "*.irma.consensus.fasta",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BLAST_MAKEBLASTDB_NCBI_PARSEID' {
        ext.args = '-dbtype nucl -parse_seqids'
    }

    withName: 'BLAST_MAKEBLASTDB_NCBI_NO_PARSEID' {
        ext.args  = '-dbtype nucl'
        publishDir = [
            [
                path: { "${params.outdir}/blast/blastdb/ncbi"},
                mode: params.publish_dir_mode
            ]
        ]
    }
    withName: 'BLAST_MAKEBLASTDB_REFDB' {
        ext.args  = '-dbtype nucl'
        publishDir = [
            [
                path: { "${params.outdir}/blast/blastdb/ref_db"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BLAST_BLASTN_IRMA' {
        ext.args = '-outfmt "6 qaccver saccver pident length mismatch gapopen qstart qend sstart send evalue bitscore qlen slen qcovs stitle" -num_alignments 1000000 -evalue 1e-6'
        publishDir = [
            [
                path: { "${params.outdir}/blast/blastn/irma"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BLAST_BLASTN_CONSENSUS' {
        ext.args = '-outfmt "6 qaccver saccver pident length mismatch gapopen qstart qend sstart send evalue bitscore qlen slen qcovs stitle" -num_alignments 1000000 -evalue 1e-6'
        publishDir = [
            [
                path: { "${params.outdir}/blast/blastn/consensus"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BLAST_BLASTN_CONSENSUS_REF_DB' {
        ext.args = '-outfmt "6 qaccver saccver pident length mismatch gapopen qstart qend sstart send evalue bitscore qlen slen qcovs stitle" -num_alignments 1000000 -evalue 1e-6'
        publishDir = [
            [
                path: { "${params.outdir}/blast/blastn/against_ref_db"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BCF_CONSENSUS' {
        publishDir = [
            [
                path: { "${params.outdir}/consensus/bcftools/$sample_name"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BCFTOOLS_STATS' {
        publishDir = [
            [
                path: { "${params.outdir}/variants/$sample_name"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'CAT_CONSENSUS' {
        publishDir = [
            [
                path: { "${params.outdir}/consensus/bcftools/"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'COVERAGE_PLOT' {
        publishDir = [
            [
                path: { "${params.outdir}/coverage_plots/$sample_name"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'MEDAKA' {
        publishDir = [
            [
                path: { "${params.outdir}/variants/$sample_name"},
                pattern: "*.{vcf,log}",
                mode: params.publish_dir_mode
            ],
            [
                path: { "${params.outdir}/variants/"},
                pattern: "*.yml",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'CLAIR3' {
        publishDir = [
            [
                path: { "${params.outdir}/variants/$sample_name/clair3"},
                mode: params.publish_dir_mode,
                enable: true
            ]
        ]
    }

    withName: 'MINIMAP2' {
        publishDir = [
            [
                path: { "${params.outdir}/mapping/$sample_name"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'MOSDEPTH_GENOME' {
        publishDir = [
            [
                path: { "${params.outdir}/mosdepth/$sample_name"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'PULL_TOP_REF_ID' {
        publishDir = [
            [
                path: { "${params.outdir}/reference_sequences/$meta.id"},
                pattern: "*.csv",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'CHECK_REF_FASTA' {
        publishDir = [
            [
                path: { "${params.outdir}/reference_sequences/"},
                pattern: "*.fasta",
                mode: params.publish_dir_mode
            ]
        ]
    }


    withName: 'BLAST_BLASTDBCMD' {
        publishDir = [
            [
                path: { "${params.outdir}/reference_sequences/$sample_name"},
                pattern: "*.fasta",
                mode: params.publish_dir_mode
            ],
            [
                path: { "${params.outdir}/reference_sequences/"},
                pattern: "versions.yml",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'SUBTYPING_REPORT_BCF_CONSENSUS' {
        publishDir = [
            [
                path: { "${params.outdir}/"},
                pattern: "*.{xlsx,log}",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BLASTN_REPORT' {
        publishDir = [
            [
                path: { "${params.outdir}/mismatch_report"},
                pattern: "*.{xlsx}",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'SUBTYPING_REPORT_IRMA_CONSENSUS' {
        publishDir = [
            [
                path: { "${params.outdir}/irma"},
                pattern: "*.{xlsx,log}",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'VCF_FILTER_FRAMESHIFT' {
        publishDir = [
            [
                path: { "${params.outdir}/variants/$sample_name"},
                pattern: "*.vcf",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'GUNZIP_FLU_FASTA' {
        publishDir = [
            [
                path: { "${params.outdir}/flu_fasta"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'MULTIQC_TSV_BARCODE_COUNT_FAIL' {
        publishDir = [
            [
                path: { "${params.outdir}/barcode_count"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'MULTIQC_TSV_BARCODE_COUNT_PASS' {
        publishDir = [
            [
                path: { "${params.outdir}/barcode_count"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'SOFTWARE_VERSIONS' {
         publishDir = [
            [
                path: { "${params.outdir}/"},
                pattern: "software_versions.yml",
                mode: params.publish_dir_mode
            ]
        ]
    }
}